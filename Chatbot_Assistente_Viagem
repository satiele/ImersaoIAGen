!pip install --upgrade google.generativeai

import google.generativeai as genai

GOOGLE_API_KEY = "AIzaSyCKwKd8I1zd8LHIgWgRsaKBQoAjxXqrnG0"  # Substitua pela sua chave API
genai.configure(api_key=GOOGLE_API_KEY)
model = genai.GenerativeModel('gemini-pro')
chat = model.start_chat(history=[])

print("Ol√°! Sou seu assistente de planejamento de viagens. üëã")

# Prefer√™ncia por viagens nacionais ou internacionais
tipo_viagem = input("Voc√™ prefere sugest√µes de viagens nacionais ou internacionais? ")

# Coleta de informa√ß√µes da viagem
dias = int(input("Quantos dias de viagem voc√™ planeja? "))
mes = input("Em qual m√™s voc√™ gostaria de viajar? ")
pessoas = int(input("Quantas pessoas ir√£o viajar? "))
orcamento = float(input("Qual o seu or√ßamento total para a viagem (em R$)? "))
origem = input("Qual a cidade de origem da viagem? ")

# Pergunta sobre m√∫ltiplos destinos
multiplos_destinos = input("Voc√™ gostaria de visitar mais de um destino nesta viagem? (sim/n√£o) ")
num_destinos = 1  # Valor padr√£o
if multiplos_destinos.lower() == "sim":
    num_destinos = int(input("Quantos destinos voc√™ gostaria de incluir no roteiro? "))

# Formatando o prompt para o Gemini (primeira itera√ß√£o)
prompt = f"""
Planeje uma viagem de f√©rias de {dias} dias em {mes} para {pessoas} pessoas com um or√ßamento de R${orcamento:.2f}.
O usu√°rio prefere sugest√µes de viagens {tipo_viagem} e a cidade de origem √© {origem}.

O usu√°rio deseja visitar {num_destinos} destinos diferentes durante a viagem.

Crie um roteiro otimizado que inclua:

* **Divis√£o dos dias:** Distribua os dias de viagem entre os destinos de forma equilibrada, considerando o tempo de deslocamento.
* **Sugest√µes de destinos:** Sugira destinos interessantes e vi√°veis considerando o or√ßamento, os dias de viagem e a localiza√ß√£o de cada destino.
* **Detalhes de cada destino:**
    * **Principais pontos tur√≠sticos:** Mencione pelo menos 3 pontos tur√≠sticos imperd√≠veis em cada destino.
    * **O que levar na mala:** D√™ dicas de itens essenciais para levar na mala de acordo com o clima e atividades.
    * **Previs√£o do tempo:** Inclua uma previs√£o geral do tempo para o per√≠odo da viagem em cada destino.
    * **Or√ßamento detalhado:**
        * Estimativa de custos de transporte (passagens a√©reas/rodovi√°rias) considerando a cidade de origem e os deslocamentos entre os destinos.
        * Estimativa de custos com passeios tur√≠sticos em cada destino.
        * Estimativa de custos com refei√ß√µes (considerando caf√© da manh√£, almo√ßo e jantar) em cada destino.
        * Estimativa de custos com hospedagem (considerando o n√∫mero de pessoas) em cada destino.

Apresente o roteiro de forma organizada e f√°cil de ler, com detalhes sobre cada destino e os custos de cada etapa da viagem.
"""

generation_config = genai.GenerationConfig()  # Aumenta o limite de tokens
response = chat.send_message(prompt, generation_config=generation_config)
print("Resposta:\n", response.text)

# Pergunta se o usu√°rio j√° conhece alguma das sugest√µes
conhece_destinos = input("Voc√™ j√° conhece algum dos destinos sugeridos? (sim/n√£o) ")

while conhece_destinos.lower() == "sim":
    destinos_descartados = input("Quais destinos voc√™ j√° conhece? Separe-os por v√≠rgula. ").split(",")

    # Prompt atualizado para novas sugest√µes
    prompt = f"""
    O usu√°rio j√° conhece os seguintes destinos: {", ".join(destinos_descartados)}.

    Sugira um novo roteiro para uma viagem de f√©rias de {dias} dias em {mes} para {pessoas} pessoas com um or√ßamento de R${orcamento:.2f},
    considerando a prefer√™ncia por viagens {tipo_viagem}, a cidade de origem {origem} e a visita a {num_destinos} destinos.

    Mantenha o mesmo formato da resposta anterior, incluindo a divis√£o dos dias, detalhes sobre cada destino (pontos tur√≠sticos, o que levar na mala, previs√£o do tempo,
    or√ßamento detalhado com custos de transporte, passeios, refei√ß√µes e hospedagem).
    """

    response = chat.send_message(prompt, generation_config=generation_config)
    print("Resposta:\n", response.text)

    conhece_destinos = input("Voc√™ j√° conhece algum dos novos destinos sugeridos? (sim/n√£o) ")
